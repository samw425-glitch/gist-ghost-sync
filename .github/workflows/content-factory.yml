name: Content Factory
on:
  workflow_dispatch:
  repository_dispatch:
    types: [ content_update ]
  schedule:
    - cron: '*/5 * * * *'

jobs:
  collect:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        env: [ dev, staging, prod ]
    permissions:
      contents: read
    env:
      GH_TOKEN: ${{ github.token }}
      GITHUB_TOKEN: ${{ github.token }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      S3_BUCKET: ${{ secrets.S3_BUCKET }}
      S3_REGION: ${{ secrets.S3_REGION }}
      S3_ENDPOINT: ${{ secrets.S3_ENDPOINT }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Collect assets
        shell: pwsh
        run: |
          $file = "${{ github.workspace }}/repos.${{ matrix.env }}.txt"
          ./scripts/factory/collect-content.ps1 -ReposFile $file -OutputDir "out/${{ matrix.env }}" -MaxSizeMB 50
      - name: Create Gist modules (optional)
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN_GIST }}
        shell: pwsh
        run: |
          $file = "${{ github.workspace }}/repos.${{ matrix.env }}.txt"
          ./scripts/factory/create-gist-modules.ps1 -ReposFile $file -OutputFile "out/${{ matrix.env }}/modules.json"
      - name: Build SQLite catalog
        run: |
          python ./scripts/factory/db_ingest.py "out/${{ matrix.env }}/files.json" "out/${{ matrix.env }}/content-${{ matrix.env }}.sqlite" --modules "out/${{ matrix.env }}/modules.json"
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: content-${{ matrix.env }}
          path: |
            out/${{ matrix.env }}/files.json
            out/${{ matrix.env }}/content-${{ matrix.env }}.sqlite
      - name: Sync to S3 (optional)
        if: ${{ env.S3_BUCKET != '' && env.AWS_ACCESS_KEY_ID != '' && env.AWS_SECRET_ACCESS_KEY != '' }}
        run: |
          pip install awscli
          export AWS_DEFAULT_REGION=${S3_REGION:-us-east-1}
          DEST="s3://${S3_BUCKET}/${{ matrix.env }}/"
          if [ -n "${S3_ENDPOINT}" ]; then EP="--endpoint-url ${S3_ENDPOINT}"; fi
          aws s3 $EP cp out/${{ matrix.env }}/ ${DEST} --recursive
